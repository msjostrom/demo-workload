apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - image: nginxinc/nginx-unprivileged
        imagePullPolicy: IfNotPresent
        name: nginx
        ports:
        - containerPort: 8080
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginxconf
          subPath: nginx.conf
      volumes:
      - configMap:
          name: nginxconf
        name: nginxconf
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  name: nginx
spec:
  ports:
  - name: "8080"
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: nginx
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nginx
spec:
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: nginx
    weight: 100
  wildcardPolicy: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginxconf
data:
  nginx.conf: |
    worker_processes  1;
    pid /tmp/nginx.pid;
    error_log /dev/stdout info;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen       8080;
          server_name  localhost;
          access_log /dev/stdout;
          location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
      }
    }
